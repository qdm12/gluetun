// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/qdm12/gluetun/internal/configuration/settings (interfaces: Warner)

// Package settings is a generated GoMock package.
package settings

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWarner is a mock of Warner interface.
type MockWarner struct {
	ctrl     *gomock.Controller
	recorder *MockWarnerMockRecorder
}

// MockWarnerMockRecorder is the mock recorder for MockWarner.
type MockWarnerMockRecorder struct {
	mock *MockWarner
}

// NewMockWarner creates a new mock instance.
func NewMockWarner(ctrl *gomock.Controller) *MockWarner {
	mock := &MockWarner{ctrl: ctrl}
	mock.recorder = &MockWarnerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWarner) EXPECT() *MockWarnerMockRecorder {
	return m.recorder
}

// Warn mocks base method.
func (m *MockWarner) Warn(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Warn", arg0)
}

// Warn indicates an expected call of Warn.
func (mr *MockWarnerMockRecorder) Warn(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Warn", reflect.TypeOf((*MockWarner)(nil).Warn), arg0)
}
